//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.12.0
//     from Assets/PlayerInput/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Farmer.PlayerInput
{
    /// <summary>
    /// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/PlayerInput/InputActions.inputactions".
    /// </summary>
    /// <remarks>
    /// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
    /// </remarks>
    /// <example>
    /// <code>
    /// using namespace UnityEngine;
    /// using UnityEngine.InputSystem;
    ///
    /// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
    /// public class Example : MonoBehaviour, MyActions.IPlayerActions
    /// {
    ///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
    ///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
    ///
    ///     void Awake()
    ///     {
    ///         m_Actions = new MyActions_Actions();              // Create asset object.
    ///         m_Player = m_Actions.Player;                      // Extract action map object.
    ///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
    ///     }
    ///
    ///     void OnDestroy()
    ///     {
    ///         m_Actions.Dispose();                              // Destroy asset object.
    ///     }
    ///
    ///     void OnEnable()
    ///     {
    ///         m_Player.Enable();                                // Enable all actions within map.
    ///     }
    ///
    ///     void OnDisable()
    ///     {
    ///         m_Player.Disable();                               // Disable all actions within map.
    ///     }
    ///
    ///     #region Interface implementation of MyActions.IPlayerActions
    ///
    ///     // Invoked when "Move" action is either started, performed or canceled.
    ///     public void OnMove(InputAction.CallbackContext context)
    ///     {
    ///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
    ///     }
    ///
    ///     // Invoked when "Attack" action is either started, performed or canceled.
    ///     public void OnAttack(InputAction.CallbackContext context)
    ///     {
    ///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
    ///     }
    ///
    ///     #endregion
    /// }
    /// </code>
    /// </example>
    public partial class @InputActions: IInputActionCollection2, IDisposable
    {
        /// <summary>
        /// Provides access to the underlying asset instance.
        /// </summary>
        public InputActionAsset asset { get; }

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""42064494-e60d-4fd7-a973-3214d5c1fd49"",
            ""actions"": [
                {
                    ""name"": ""WASD"",
                    ""type"": ""Value"",
                    ""id"": ""0afe216d-001c-4626-9f65-7edb19640cff"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""c79439d3-7880-419b-8612-a860c03a4451"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""c33841ad-22df-4bca-9949-9aff22f9f81c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_1"",
                    ""type"": ""Button"",
                    ""id"": ""a6befdde-1dab-42cd-b37a-e883995a7139"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_2"",
                    ""type"": ""Button"",
                    ""id"": ""f2b86e4c-05a6-4142-a269-d51bfe4c9fcf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_3"",
                    ""type"": ""Button"",
                    ""id"": ""877b19dd-d354-4dbb-85c3-569297532058"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_4"",
                    ""type"": ""Button"",
                    ""id"": ""a3856589-5ddd-4ede-bb36-c584e595f64f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_5"",
                    ""type"": ""Button"",
                    ""id"": ""013230d9-e371-40f2-b40d-14025d9a2e66"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_6"",
                    ""type"": ""Button"",
                    ""id"": ""c3c991fb-5e31-4094-b54d-35f1ce5a7def"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_7"",
                    ""type"": ""Button"",
                    ""id"": ""f350dae2-193c-4132-b188-ede8a916d48b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_8"",
                    ""type"": ""Button"",
                    ""id"": ""e537c0e6-8d91-4f34-8beb-3e0705ef1976"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_9"",
                    ""type"": ""Button"",
                    ""id"": ""4ece5294-80c3-4f1e-8c22-fd89f03d8483"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_10"",
                    ""type"": ""Button"",
                    ""id"": ""b7dd069f-502a-41bf-aa06-342c946b9c3e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_11"",
                    ""type"": ""Button"",
                    ""id"": ""711589de-9df7-499e-b147-ff4753bd5cf1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar_12"",
                    ""type"": ""Button"",
                    ""id"": ""f1a057f5-75de-430d-a426-03b7f7da9970"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""bbcad61c-ea88-4669-afb6-1aa9733d7c9d"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d16266ad-f679-4c16-98d3-93bd4d2224fd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8a9b918d-cfe1-4aaa-b998-ca3a3400a87c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5d6cce00-a163-4a7c-99c3-d53cee372f88"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e5ee36b4-7d25-4a50-8158-04ff8fc84dc4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7b49a77e-abd0-4f7d-8ff4-3013fb074185"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77524b79-e27d-4942-aafa-c0d1e5b124d6"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7afaf4a-c7e1-4ec4-890a-5c1bd32b414b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""232866bf-978d-4ad4-ad2c-1911dd893b11"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7f1f93e-8744-4817-9c58-96dec464fb2d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbe08f49-7453-46a5-a82c-5cad64e6d522"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31c93a50-4d15-459c-9a4a-e88f54ac3338"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4e13897-4024-4b46-b064-c559331c3abf"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""500ba096-0c80-4697-b581-c256311c2e30"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0bf7b13-af12-484c-884e-ed0c083c21ab"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49016ffb-5cb1-4e81-b785-18d7ef4efacb"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b9db9f5-c693-4850-b68e-88e25eb98eb3"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebd4525d-76f8-480a-a7fb-59e82cf2f3f5"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f3e7ab4-26d8-441d-9b55-251d4ce7b316"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcf8a764-27d6-4f78-8a70-ad2588f6d9f9"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7544df21-4a5a-45bf-b4f1-3d3672bbc11a"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbar_12"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Gameplay
            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
            m_Gameplay_WASD = m_Gameplay.FindAction("WASD", throwIfNotFound: true);
            m_Gameplay_Inventory = m_Gameplay.FindAction("Inventory", throwIfNotFound: true);
            m_Gameplay_Escape = m_Gameplay.FindAction("Escape", throwIfNotFound: true);
            m_Gameplay_Hotbar_1 = m_Gameplay.FindAction("Hotbar_1", throwIfNotFound: true);
            m_Gameplay_Hotbar_2 = m_Gameplay.FindAction("Hotbar_2", throwIfNotFound: true);
            m_Gameplay_Hotbar_3 = m_Gameplay.FindAction("Hotbar_3", throwIfNotFound: true);
            m_Gameplay_Hotbar_4 = m_Gameplay.FindAction("Hotbar_4", throwIfNotFound: true);
            m_Gameplay_Hotbar_5 = m_Gameplay.FindAction("Hotbar_5", throwIfNotFound: true);
            m_Gameplay_Hotbar_6 = m_Gameplay.FindAction("Hotbar_6", throwIfNotFound: true);
            m_Gameplay_Hotbar_7 = m_Gameplay.FindAction("Hotbar_7", throwIfNotFound: true);
            m_Gameplay_Hotbar_8 = m_Gameplay.FindAction("Hotbar_8", throwIfNotFound: true);
            m_Gameplay_Hotbar_9 = m_Gameplay.FindAction("Hotbar_9", throwIfNotFound: true);
            m_Gameplay_Hotbar_10 = m_Gameplay.FindAction("Hotbar_10", throwIfNotFound: true);
            m_Gameplay_Hotbar_11 = m_Gameplay.FindAction("Hotbar_11", throwIfNotFound: true);
            m_Gameplay_Hotbar_12 = m_Gameplay.FindAction("Hotbar_12", throwIfNotFound: true);
        }

        ~@InputActions()
        {
            UnityEngine.Debug.Assert(!m_Gameplay.enabled, "This will cause a leak and performance issues, InputActions.Gameplay.Disable() has not been called.");
        }

        /// <summary>
        /// Destroys this asset and all associated <see cref="InputAction"/> instances.
        /// </summary>
        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
        public void Enable()
        {
            asset.Enable();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
        public void Disable()
        {
            asset.Disable();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
        public IEnumerable<InputBinding> bindings => asset.bindings;

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
        private readonly InputAction m_Gameplay_WASD;
        private readonly InputAction m_Gameplay_Inventory;
        private readonly InputAction m_Gameplay_Escape;
        private readonly InputAction m_Gameplay_Hotbar_1;
        private readonly InputAction m_Gameplay_Hotbar_2;
        private readonly InputAction m_Gameplay_Hotbar_3;
        private readonly InputAction m_Gameplay_Hotbar_4;
        private readonly InputAction m_Gameplay_Hotbar_5;
        private readonly InputAction m_Gameplay_Hotbar_6;
        private readonly InputAction m_Gameplay_Hotbar_7;
        private readonly InputAction m_Gameplay_Hotbar_8;
        private readonly InputAction m_Gameplay_Hotbar_9;
        private readonly InputAction m_Gameplay_Hotbar_10;
        private readonly InputAction m_Gameplay_Hotbar_11;
        private readonly InputAction m_Gameplay_Hotbar_12;
        /// <summary>
        /// Provides access to input actions defined in input action map "Gameplay".
        /// </summary>
        public struct GameplayActions
        {
            private @InputActions m_Wrapper;

            /// <summary>
            /// Construct a new instance of the input action map wrapper class.
            /// </summary>
            public GameplayActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/WASD".
            /// </summary>
            public InputAction @WASD => m_Wrapper.m_Gameplay_WASD;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Inventory".
            /// </summary>
            public InputAction @Inventory => m_Wrapper.m_Gameplay_Inventory;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Escape".
            /// </summary>
            public InputAction @Escape => m_Wrapper.m_Gameplay_Escape;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_1".
            /// </summary>
            public InputAction @Hotbar_1 => m_Wrapper.m_Gameplay_Hotbar_1;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_2".
            /// </summary>
            public InputAction @Hotbar_2 => m_Wrapper.m_Gameplay_Hotbar_2;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_3".
            /// </summary>
            public InputAction @Hotbar_3 => m_Wrapper.m_Gameplay_Hotbar_3;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_4".
            /// </summary>
            public InputAction @Hotbar_4 => m_Wrapper.m_Gameplay_Hotbar_4;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_5".
            /// </summary>
            public InputAction @Hotbar_5 => m_Wrapper.m_Gameplay_Hotbar_5;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_6".
            /// </summary>
            public InputAction @Hotbar_6 => m_Wrapper.m_Gameplay_Hotbar_6;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_7".
            /// </summary>
            public InputAction @Hotbar_7 => m_Wrapper.m_Gameplay_Hotbar_7;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_8".
            /// </summary>
            public InputAction @Hotbar_8 => m_Wrapper.m_Gameplay_Hotbar_8;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_9".
            /// </summary>
            public InputAction @Hotbar_9 => m_Wrapper.m_Gameplay_Hotbar_9;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_10".
            /// </summary>
            public InputAction @Hotbar_10 => m_Wrapper.m_Gameplay_Hotbar_10;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_11".
            /// </summary>
            public InputAction @Hotbar_11 => m_Wrapper.m_Gameplay_Hotbar_11;
            /// <summary>
            /// Provides access to the underlying input action "Gameplay/Hotbar_12".
            /// </summary>
            public InputAction @Hotbar_12 => m_Wrapper.m_Gameplay_Hotbar_12;
            /// <summary>
            /// Provides access to the underlying input action map instance.
            /// </summary>
            public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
            public void Enable() { Get().Enable(); }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
            public void Disable() { Get().Disable(); }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
            public bool enabled => Get().enabled;
            /// <summary>
            /// Implicitly converts an <see ref="GameplayActions" /> to an <see ref="InputActionMap" /> instance.
            /// </summary>
            public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
            /// <summary>
            /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
            /// </summary>
            /// <param name="instance">Callback instance.</param>
            /// <remarks>
            /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
            /// </remarks>
            /// <seealso cref="GameplayActions" />
            public void AddCallbacks(IGameplayActions instance)
            {
                if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
                @WASD.started += instance.OnWASD;
                @WASD.performed += instance.OnWASD;
                @WASD.canceled += instance.OnWASD;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Hotbar_1.started += instance.OnHotbar_1;
                @Hotbar_1.performed += instance.OnHotbar_1;
                @Hotbar_1.canceled += instance.OnHotbar_1;
                @Hotbar_2.started += instance.OnHotbar_2;
                @Hotbar_2.performed += instance.OnHotbar_2;
                @Hotbar_2.canceled += instance.OnHotbar_2;
                @Hotbar_3.started += instance.OnHotbar_3;
                @Hotbar_3.performed += instance.OnHotbar_3;
                @Hotbar_3.canceled += instance.OnHotbar_3;
                @Hotbar_4.started += instance.OnHotbar_4;
                @Hotbar_4.performed += instance.OnHotbar_4;
                @Hotbar_4.canceled += instance.OnHotbar_4;
                @Hotbar_5.started += instance.OnHotbar_5;
                @Hotbar_5.performed += instance.OnHotbar_5;
                @Hotbar_5.canceled += instance.OnHotbar_5;
                @Hotbar_6.started += instance.OnHotbar_6;
                @Hotbar_6.performed += instance.OnHotbar_6;
                @Hotbar_6.canceled += instance.OnHotbar_6;
                @Hotbar_7.started += instance.OnHotbar_7;
                @Hotbar_7.performed += instance.OnHotbar_7;
                @Hotbar_7.canceled += instance.OnHotbar_7;
                @Hotbar_8.started += instance.OnHotbar_8;
                @Hotbar_8.performed += instance.OnHotbar_8;
                @Hotbar_8.canceled += instance.OnHotbar_8;
                @Hotbar_9.started += instance.OnHotbar_9;
                @Hotbar_9.performed += instance.OnHotbar_9;
                @Hotbar_9.canceled += instance.OnHotbar_9;
                @Hotbar_10.started += instance.OnHotbar_10;
                @Hotbar_10.performed += instance.OnHotbar_10;
                @Hotbar_10.canceled += instance.OnHotbar_10;
                @Hotbar_11.started += instance.OnHotbar_11;
                @Hotbar_11.performed += instance.OnHotbar_11;
                @Hotbar_11.canceled += instance.OnHotbar_11;
                @Hotbar_12.started += instance.OnHotbar_12;
                @Hotbar_12.performed += instance.OnHotbar_12;
                @Hotbar_12.canceled += instance.OnHotbar_12;
            }

            /// <summary>
            /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
            /// </summary>
            /// <remarks>
            /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
            /// </remarks>
            /// <seealso cref="GameplayActions" />
            private void UnregisterCallbacks(IGameplayActions instance)
            {
                @WASD.started -= instance.OnWASD;
                @WASD.performed -= instance.OnWASD;
                @WASD.canceled -= instance.OnWASD;
                @Inventory.started -= instance.OnInventory;
                @Inventory.performed -= instance.OnInventory;
                @Inventory.canceled -= instance.OnInventory;
                @Escape.started -= instance.OnEscape;
                @Escape.performed -= instance.OnEscape;
                @Escape.canceled -= instance.OnEscape;
                @Hotbar_1.started -= instance.OnHotbar_1;
                @Hotbar_1.performed -= instance.OnHotbar_1;
                @Hotbar_1.canceled -= instance.OnHotbar_1;
                @Hotbar_2.started -= instance.OnHotbar_2;
                @Hotbar_2.performed -= instance.OnHotbar_2;
                @Hotbar_2.canceled -= instance.OnHotbar_2;
                @Hotbar_3.started -= instance.OnHotbar_3;
                @Hotbar_3.performed -= instance.OnHotbar_3;
                @Hotbar_3.canceled -= instance.OnHotbar_3;
                @Hotbar_4.started -= instance.OnHotbar_4;
                @Hotbar_4.performed -= instance.OnHotbar_4;
                @Hotbar_4.canceled -= instance.OnHotbar_4;
                @Hotbar_5.started -= instance.OnHotbar_5;
                @Hotbar_5.performed -= instance.OnHotbar_5;
                @Hotbar_5.canceled -= instance.OnHotbar_5;
                @Hotbar_6.started -= instance.OnHotbar_6;
                @Hotbar_6.performed -= instance.OnHotbar_6;
                @Hotbar_6.canceled -= instance.OnHotbar_6;
                @Hotbar_7.started -= instance.OnHotbar_7;
                @Hotbar_7.performed -= instance.OnHotbar_7;
                @Hotbar_7.canceled -= instance.OnHotbar_7;
                @Hotbar_8.started -= instance.OnHotbar_8;
                @Hotbar_8.performed -= instance.OnHotbar_8;
                @Hotbar_8.canceled -= instance.OnHotbar_8;
                @Hotbar_9.started -= instance.OnHotbar_9;
                @Hotbar_9.performed -= instance.OnHotbar_9;
                @Hotbar_9.canceled -= instance.OnHotbar_9;
                @Hotbar_10.started -= instance.OnHotbar_10;
                @Hotbar_10.performed -= instance.OnHotbar_10;
                @Hotbar_10.canceled -= instance.OnHotbar_10;
                @Hotbar_11.started -= instance.OnHotbar_11;
                @Hotbar_11.performed -= instance.OnHotbar_11;
                @Hotbar_11.canceled -= instance.OnHotbar_11;
                @Hotbar_12.started -= instance.OnHotbar_12;
                @Hotbar_12.performed -= instance.OnHotbar_12;
                @Hotbar_12.canceled -= instance.OnHotbar_12;
            }

            /// <summary>
            /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="GameplayActions.UnregisterCallbacks(IGameplayActions)" />.
            /// </summary>
            /// <seealso cref="GameplayActions.UnregisterCallbacks(IGameplayActions)" />
            public void RemoveCallbacks(IGameplayActions instance)
            {
                if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            /// <summary>
            /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
            /// </summary>
            /// <remarks>
            /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
            /// </remarks>
            /// <seealso cref="GameplayActions.AddCallbacks(IGameplayActions)" />
            /// <seealso cref="GameplayActions.RemoveCallbacks(IGameplayActions)" />
            /// <seealso cref="GameplayActions.UnregisterCallbacks(IGameplayActions)" />
            public void SetCallbacks(IGameplayActions instance)
            {
                foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        /// <summary>
        /// Provides a new <see cref="GameplayActions" /> instance referencing this action map.
        /// </summary>
        public GameplayActions @Gameplay => new GameplayActions(this);
        /// <summary>
        /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Gameplay" which allows adding and removing callbacks.
        /// </summary>
        /// <seealso cref="GameplayActions.AddCallbacks(IGameplayActions)" />
        /// <seealso cref="GameplayActions.RemoveCallbacks(IGameplayActions)" />
        public interface IGameplayActions
        {
            /// <summary>
            /// Method invoked when associated input action "WASD" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnWASD(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Inventory" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInventory(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Escape" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnEscape(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_1(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_2(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_3" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_3(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_4" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_4(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_5" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_5(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_6" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_6(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_7" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_7(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_8" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_8(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_9" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_9(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_10" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_10(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_11" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_11(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Hotbar_12" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnHotbar_12(InputAction.CallbackContext context);
        }
    }
}
